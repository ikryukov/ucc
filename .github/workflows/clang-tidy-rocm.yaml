name: Linter-ROCM

on: [push, pull_request]

env:
  OPEN_UCX_LINK: https://github.com/openucx/ucx
  OPEN_UCX_BRANCH: master
  CLANG_VER: 17
  ROCM_VER: 6.3
  LIBRARY_PATH: /tmp/ucx/install/lib
  LD_LIBRARY_PATH: /tmp/ucx/install/lib
jobs:
  clang-tidy:
    runs-on: ubuntu-22.04
    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends wget lsb-core software-properties-common gpg curl
        sudo mkdir -p /etc/apt/keyrings
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key | sudo gpg --dearmor -o /etc/apt/keyrings/llvm.gpg
        echo "deb [signed-by=/etc/apt/keyrings/llvm.gpg] http://apt.llvm.org/jammy/ llvm-toolchain-jammy-${CLANG_VER} main" | sudo tee /etc/apt/sources.list.d/llvm.list
        sudo apt-get update
        sudo apt-get install -y --no-install-recommends doxygen doxygen-latex clang-tidy-${CLANG_VER} bear
    - name: Install extra dependencies
      run: |
        sudo mkdir -p /etc/apt/keyrings
        wget https://repo.radeon.com/rocm/rocm.gpg.key -O - | sudo gpg --dearmor -o /etc/apt/keyrings/rocm.gpg
        echo "deb [arch=amd64 signed-by=/etc/apt/keyrings/rocm.gpg] https://repo.radeon.com/rocm/apt/${ROCM_VER} jammy main" | sudo tee /etc/apt/sources.list.d/rocm.list
        echo -e 'Package: *\nPin: release o=repo.radeon.com\nPin-Priority: 600' | sudo tee /etc/apt/preferences.d/rocm-pin-600
        echo 'export PATH=$PATH:/opt/rocm/bin' | sudo tee -a /etc/profile.d/rocm.sh
        sudo apt-get update
        sudo apt-get install -y rocm-hip-sdk
    - name: Get UCX
      run: git clone ${OPEN_UCX_LINK} -b ${OPEN_UCX_BRANCH} /tmp/ucx
    - name: Build UCX
      run: |
        cd /tmp/ucx && ./autogen.sh
        CC=gcc CXX=g++ ./contrib/configure-release --without-java --without-go --disable-numa --prefix $PWD/install --with-rocm=/opt/rocm
        make -j install
    - uses: actions/checkout@v1
    - name: Build UCC
      run: |
        ./autogen.sh
        CC=clang-${CLANG_VER} CXX=clang++-${CLANG_VER} ./configure --prefix=/tmp/ucc/install --with-ucx=/tmp/ucx/install --with-rocm=/opt/rocm --with-rccl=/opt/rocm --enable-assert
        bear --output /tmp/compile_commands.json -- make -j
    - name: Run clang-tidy
      run: |
        echo "Workspace: ${GITHUB_WORKSPACE}"
        cd ${GITHUB_WORKSPACE}
        run-clang-tidy-${CLANG_VER} -p /tmp/ -header-filter='^(?!.*(${GITHUB_WORKSPACE}/src/components/ec/rocm/kernel/.*|${GITHUB_WORKSPACE}/src/components/mc/rocm/kernel/.*)).*$' "^(?!.*\.cu$).*$" 2>&1 | tee /tmp/clang_tidy.log
        nerrors=$(grep 'error:' /tmp/clang_tidy.log | wc -l)
        if [ $nerrors -ne 0 ]; then
            exit 125;
        fi
